let length (xs: 'a list): int = __js_field__ xs "length"
let index (i: int) (xs: 'a list): 'a = __js_method__ xs "at" [i]
let slice (at: int) (xs: 'a list): 'a list = __js_method__ xs "slice" [at]

let head (xs: 'a list): 'a = index 0 xs
let tail (xs: 'a list): 'a list = slice 1 xs

let rec map (f: 'a -> 'b) (xs: 'a list): 'b list =
  if xs == [] then []
  else
    (f (head xs)) :: (map f (tail xs))

let rec iter (f: 'a -> unit) (xs: 'a list): unit =
  if xs == [] then ()
  else
    (f (head xs)); (iter f (tail xs))